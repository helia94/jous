version: "3.7"
services:
  postgres:
    container_name: postgres
    restart: always
    image: postgres:14
    environment:
      - POSTGRES_USER=testusr
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=jousdb
    volumes:
      - flask-app-db:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    image: redis:6-alpine
    container_name: redis
    ports:
      - "6379:6379"

  app:
    container_name: jous-app
    restart: always
    build:
      context: .
      dockerfile: Dockerfile-dev
    environment:
      - FLASK_ENV=docker
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    ports:
      - 5000:5000
    volumes:
      - .:/app
    depends_on:
      - postgres
      - redis
    entrypoint: ["/bin/bash", "/app/backend/scripts/docker_script.sh"]

  worker:
    build: .
    container_name: celery_worker
    environment:
      - FLASK_ENV=docker
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - app
      - redis
    command: celery --app backend.outbound.queue.tasks.translation_task.celery worker --loglevel=info

volumes:
  flask-app-db:
    name: flask-app-db
